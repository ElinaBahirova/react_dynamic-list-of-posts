{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","components/PostDetails.tsx","components/UserSelector.tsx","utils/fetchClient.ts","api/users.ts","App.tsx","index.tsx"],"names":["PostsList","posts","getPostComments","selectedPost","className","map","post","id","title","type","classNames","onClick","Loader","defaultNewComment","postId","name","email","body","NewCommentForm","addNewComment","useState","nameError","setNameError","emailError","setEmailError","commentError","setCommentError","newComment","setNewComment","commentIsAdding","setCommentIsAdding","useEffect","onSubmit","event","preventDefault","trim","finally","htmlFor","placeholder","value","onChange","target","PostDetails","comments","commentsError","commentsAreLoading","removeCommentFromList","buttonHidden","setButtonHidden","length","comment","href","UserSelector","users","selectUser","selectedUser","contentIsVisible","setContentIsVisible","role","user","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","JSON","stringify","headers","then","fetch","response","json","client","getComments","App","setUsers","undefined","setSelectedUser","userIsLoading","setUserIsLoading","setPosts","postsLoadingError","setPostsLoadingError","setSelectedPost","setComments","setCommentsError","setCommentsAreLoading","result","userId","catch","addComment","commentId","filter","deleteComment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c57eadb7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Post } from '../types/Post';\n\ninterface Props {\n  posts: Post[];\n  selectedPost: Post | undefined;\n  getPostComments: (post: Post) => void;\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  getPostComments,\n  selectedPost,\n}) => (\n  <div data-cy=\"PostsList\">\n    <p className=\"title\">Posts:</p>\n\n    <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n      <thead>\n        <tr className=\"has-background-link-light\">\n          <th>#</th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {posts.map(post => (\n          <tr data-cy=\"Post\" key={post.id}>\n            <td data-cy=\"PostId\">{post.id}</td>\n\n            <td data-cy=\"PostTitle\">\n              {post.title}\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                type=\"button\"\n                data-cy=\"PostButton\"\n                className={classNames(\n                  'button',\n                  'is-link',\n                  { 'is-light': post !== selectedPost },\n                )}\n                onClick={() => getPostComments(post)}\n              >\n                {post === selectedPost ? 'Close' : 'Open'}\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { NewComment } from '../types/NewComment';\n\nconst defaultNewComment = {\n  postId: 0,\n  name: '',\n  email: '',\n  body: '',\n};\n\ninterface Props {\n  postId: number;\n  addNewComment: (comment: NewComment, postId: number) => Promise<void>\n}\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, addNewComment }) => {\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [commentError, setCommentError] = useState(false);\n  const [newComment, setNewComment] = useState<NewComment>(defaultNewComment);\n  const [commentIsAdding, setCommentIsAdding] = useState(false);\n\n  useEffect(() => {\n    setNewComment({ ...newComment, postId });\n  }, [postId]);\n\n  const formSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!newComment.name.trim()) {\n      setNameError(true);\n    }\n\n    if (!newComment.email.trim()) {\n      setEmailError(true);\n    }\n\n    if (!newComment.body.trim()) {\n      setCommentError(true);\n    }\n\n    if (!commentError && !emailError && !nameError) {\n      setCommentIsAdding(true);\n      addNewComment(newComment, postId)\n        .finally(() => {\n          setCommentIsAdding(false);\n          setNewComment({\n            ...newComment,\n            body: '',\n          });\n        });\n    }\n  };\n\n  const nameChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNameError(false);\n    setNewComment({ ...newComment, name: event.target.value });\n  };\n\n  const emailChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmailError(false);\n    setNewComment({ ...newComment, email: event.target.value });\n  };\n\n  const bodyChangeHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setCommentError(false);\n    setNewComment({ ...newComment, body: event.target.value });\n  };\n\n  const clear = () => {\n    setNewComment({\n      ...defaultNewComment,\n      postId,\n    });\n    setCommentError(false);\n    setEmailError(false);\n    setNameError(false);\n  };\n\n  return (\n    <form\n      data-cy=\"NewCommentForm\"\n      onSubmit={formSubmitHandler}\n    >\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames(\n              'input',\n              { 'is-danger': nameError },\n            )}\n            value={newComment.name}\n            onChange={nameChangeHandler}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {nameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {nameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames(\n              'input',\n              { 'is-danger': emailError },\n            )}\n            value={newComment.email}\n            onChange={emailChangeHandler}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {emailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {emailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames(\n              'textarea',\n              { 'is-danger': commentError },\n            )}\n            value={newComment.body}\n            onChange={bodyChangeHandler}\n          />\n        </div>\n\n        {commentError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            // className=\"button is-link is-loading\"\n            className={classNames(\n              'button',\n              'is-link',\n              { 'is-loading': commentIsAdding },\n            )}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={clear}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Comment } from '../types/Comment';\nimport { NewComment } from '../types/NewComment';\nimport { Post } from '../types/Post';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\n\ninterface Props {\n  post: Post | undefined;\n  comments: Comment[];\n  commentsError: boolean;\n  commentsAreLoading: boolean;\n  addNewComment: (comment: NewComment, postId: number) => Promise<void>;\n  removeCommentFromList: (commentId: number) => void;\n}\n\nexport const PostDetails: React.FC<Props> = ({\n  post,\n  comments,\n  commentsError,\n  commentsAreLoading,\n  addNewComment,\n  removeCommentFromList,\n}) => {\n  const [buttonHidden, setButtonHidden] = useState<boolean>(false);\n\n  const buttonClickHandler = () => {\n    setButtonHidden(true);\n  };\n\n  useEffect(() => setButtonHidden(false), [post]);\n\n  if (!post) {\n    return null;\n  }\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post.id}: ${post.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {commentsAreLoading && <Loader />}\n\n          {(!commentsAreLoading && commentsError) && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n\n          {(!commentsAreLoading && !comments.length) && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {(!commentsAreLoading && comments.length > 0) && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              {comments.map(comment => (\n                <article\n                  className=\"message is-small\"\n                  data-cy=\"Comment\"\n                  key={comment.id}\n                >\n                  <div className=\"message-header\">\n                    <a href={`mailto:${comment.email}`} data-cy=\"CommentAuthor\">\n                      {comment.name}\n                    </a>\n                    <button\n                      data-cy=\"CommentDelete\"\n                      type=\"button\"\n                      className=\"delete is-small\"\n                      aria-label=\"delete\"\n                      onClick={() => removeCommentFromList(comment.id)}\n                    >\n                      delete button\n                    </button>\n                  </div>\n\n                  <div className=\"message-body\" data-cy=\"CommentBody\">\n                    {comment.body}\n                  </div>\n                </article>\n              ))}\n            </>\n          )}\n\n          {!buttonHidden ? (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={buttonClickHandler}\n            >\n              Write a comment\n            </button>\n          )\n            : (\n              <NewCommentForm\n                postId={post.id}\n                addNewComment={addNewComment}\n              />\n            )}\n        </div>\n\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { User } from '../types/User';\n\ninterface Props {\n  users: User[];\n  selectUser: (user: User) => void;\n  selectedUser: User | undefined;\n}\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  selectUser,\n  selectedUser,\n}) => {\n  const [contentIsVisible, setContentIsVisible] = useState(false);\n\n  const dropdownHandler = () => {\n    setContentIsVisible(!contentIsVisible);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames(\n        'dropdown',\n        { 'is-active': contentIsVisible },\n      )}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={dropdownHandler}\n        >\n          <span>{selectedUser ? selectedUser.name : 'Choose a user'}</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map((user) => (\n            <a\n              href={`#user-${user.id}`}\n              className=\"dropdown-item\"\n              key={user.id}\n              onClick={() => {\n                selectUser(user);\n                setContentIsVisible(false);\n              }}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Comment } from '../types/Comment';\nimport { NewComment } from '../types/NewComment';\nimport { Post } from '../types/Post';\nimport { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getPosts = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n\nexport const getComments = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const addComment = (comment: NewComment, postId: number) => {\n  return client.post<Comment>(`/comments?postId=${postId}`, comment);\n};\n\nexport const deleteComment = (commentId: number) => {\n  return client.delete(`/comments/${commentId}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport {\n  getUsers,\n  getPosts,\n  getComments,\n  addComment,\n  deleteComment,\n} from './api/users';\nimport { Post } from './types/Post';\nimport { Comment } from './types/Comment';\nimport { NewComment } from './types/NewComment';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | undefined>(undefined);\n  const [userIsLoading, setUserIsLoading] = useState<boolean>(false);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [postsLoadingError, setPostsLoadingError] = useState<boolean>(false);\n  const [selectedPost, setSelectedPost] = useState<Post | undefined>(undefined);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [commentsError, setCommentsError] = useState<boolean>(false);\n  const [commentsAreLoading, setCommentsAreLoading] = useState(false);\n\n  useEffect(() => {\n    getUsers().then((result) => setUsers(result));\n  }, []);\n\n  const selectUser = (user: User) => {\n    if (selectedUser) {\n      setSelectedUser(undefined);\n      setPosts([]);\n    }\n\n    setUserIsLoading(true);\n    setSelectedUser(user);\n    setSelectedPost(undefined);\n\n    getPosts(user.id)\n      .then((result) => setPosts(result))\n      .catch(() => setPostsLoadingError(true))\n      .finally(() => setUserIsLoading(false));\n  };\n\n  const getPostComments = (post: Post) => {\n    if (post === selectedPost) {\n      setSelectedPost(undefined);\n    } else {\n      setSelectedPost(post);\n      setCommentsAreLoading(true);\n      getComments(post.id)\n        .then((result) => setComments(result))\n        .catch(() => setCommentsError(true))\n        .finally(() => setCommentsAreLoading(false));\n    }\n  };\n\n  const addNewComment = (comment: NewComment, postId: number) => {\n    return addComment(comment, postId)\n      .then(() => getComments(postId)\n        .then((result) => setComments(result)));\n  };\n\n  const removeCommentFromList = (commentId: number) => {\n    setComments(comments.filter(comment => commentId !== comment.id));\n    deleteComment(commentId);\n  };\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  selectUser={selectUser}\n                  selectedUser={selectedUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {userIsLoading && <Loader />}\n\n                {postsLoadingError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {(selectedUser && posts.length > 0) && (\n                  <PostsList\n                    posts={posts}\n                    selectedPost={selectedPost}\n                    getPostComments={getPostComments}\n                  />\n                )}\n\n                {(selectedUser && !posts.length && !userIsLoading) && (\n                  <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n                    No posts yet\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': selectedPost },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              <PostDetails\n                post={selectedPost}\n                comments={comments}\n                commentsError={commentsError}\n                commentsAreLoading={commentsAreLoading}\n                addNewComment={addNewComment}\n                removeCommentFromList={removeCommentFromList}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}